name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: relwithdebinfo
  # ARCH: x64

jobs:
  unix:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v2
      - uses: lukka/get-cmake@latest

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        # working-directory: ${{runner.workspace}}
        # Note the current convention is to use the -S and -B options here to specify source 
        # and build directories, but this is only available with CMake 3.13 and higher.  
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake -B build -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: build
        # working-directory: ${{runner.workspace}}
        shell: bash
        run: |
          cmake --version
          cmake --build build --config $BUILD_TYPE

      - name: Test
        # working-directory: ${{runner.workspace}}
        shell: bash
        # Execute tests defined by the CMake configuration.  
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C $BUILD_TYPE
  win:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - uses: actions/checkout@v2
      - uses: lukka/get-cmake@latest
      - uses: seanmiddleditch/gha-setup-vsdevenv@master

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build


      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: cmd
        # working-directory: ${{runner.workspace}}
        # Note the current convention is to use the -S and -B options here to specify source 
        # and build directories, but this is only available with CMake 3.13 and higher.  
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake -B build -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: build
        # working-directory: ${{runner.workspace}}
        shell: cmd
        run: |
          cmake --version
          cmake --build build -A x64 --config $BUILD_TYPE

      - name: Test
        # working-directory: ${{runner.workspace}}
        shell: cmd
        # Execute tests defined by the CMake configuration.  
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C $BUILD_TYPE
